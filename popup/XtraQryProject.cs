using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using WindowsFormsApp1.Comm;
using DevExpress.XtraGrid.Views.Grid;
using WindowsFormsApp1.Info;
using Npgsql;

namespace WindowsFormsApp1.popup
{
    public partial class XtraQryProject : WindowsFormsApp1.Base.XtraBaseForm
    {

        private CProjectInfo m_ProjectInfo= new CProjectInfo();

        private string project_cd;

        public string Project_cd { get => project_cd; set => project_cd = value; }
        public CProjectInfo ProjectInfo { get => m_ProjectInfo; set => m_ProjectInfo = value; }

        public XtraQryProject()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Uncomment next line to set the total number of data records stored within your source
            // unboundSource1.SetRowCount(42);
            // This line of code is generated by Data Source Configuration Wizard
            
            // This line of code is generated by Data Source Configuration Wizard
            
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {


            QryProjectList();

        }


        /// <summary>
        /// 프로젝트 리스트를 조회한다.
        /// </summary>
        private void QryProjectList()
        {

            Cnpgsql Qry = new Cnpgsql();


            NpgsqlCommand qryCommand = new NpgsqlCommand();

            string sql = "";
            sql =   $" select a.project_cd   " +
                    $"      , a.project_nm   " +
                    $"      , a.start_dt     " +
                    $"      , a.end_dt       " +
                    $"      , b.client_cd    " +
                    $"      , b.client_nm    " +
                    $"      , c.client_id    " +
                    $"      , c.client_id_nm " +
                    $"      , c.hp           " +
                    $"      , c.office       " +
                    $"      , c.email        " +
                    $"  from prj01m00 a, client01m00 b, client01t00 c " +
                    $" where a.client_cd = b.client_cd " +
                    $"   and a.client_id = c.client_id " +
                    $"   and a.project_nm like '%'|| :p_project_nm ||'%' " +
                    $"   and b.client_nm  like '%'|| :p_client_nm  ||'%' " +
                    $"   and c.client_id_nm  like '%'|| :p_client_id_nm  ||'%'; ";

            qryCommand.CommandText = sql;

            qryCommand.Parameters.AddWithValue("p_project_nm", edtProjectNm.Text);
            qryCommand.Parameters.AddWithValue("p_client_nm", edtClientNm.Text);
            qryCommand.Parameters.AddWithValue("p_client_id_nm", edtClientIdNm.Text);


            Qry.SetSelect(qryCommand);

            try
            {
                DataTable dt = Qry.Select();

                string str = qryCommand.CommandText;

                gridControl1.DataSource = dt;
            }
            catch (Exception ex)
            {
                itemErrMsg.Caption = ex.Message;
                throw;
            }

/*


            CHeader Header = new CHeader(UserInfo.UserID, "A0100A", "XtraQryProject", "00000", "");

            DataTable data = new DataTable ("project_list");

            DataColumn colProjectNm = new DataColumn("project_nm", typeof(string));
            DataColumn colClientNm = new DataColumn("client_nm", typeof(string));
            DataColumn colClientIdNm = new DataColumn("client_id_nm", typeof(string));

            data.Columns.Add(colProjectNm);
            data.Columns.Add(colClientNm);
            data.Columns.Add(colClientIdNm);

            DataRow Dr = data.NewRow();
            Dr["project_nm"] = edtProjectNm.Text;
            Dr["client_nm"] = edtClientNm.Text;
            Dr["client_id_nm"] = edtClientIdNm.Text;


            data.Rows.Add(Dr);

            CParam Param = new CParam(data);
            
            DataSet ds = CTransfer.QryData(Header, Param.GetDataSet());

            DataTable Dt = ds.Tables["eror_dt"];
            itemErrCd.Caption = Dt.Rows[0]["err_cd"].ToString();
            itemErrMsg.Caption = Dt.Rows[0]["err_msg"].ToString();

            DataTable Data = ds.Tables["Table"];
            gridControl1.DataSource = Data;

            //DataTable Data = ds.Tables["Table"];


            //DataTable Data = DataSet.Tables["tblProject"];
            //Data = ds.Tables["Table"];
*/
        }


        /// <summary>
        /// 프로젝트 선택 이벤트를 처리한다.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void gridView1_DoubleClick(object sender, EventArgs e)
        {
         


        }


        private void adview1_DoubleClick(object sender, EventArgs e)
        {
            DataRow Dr = adview1.GetFocusedDataRow();

            Project_cd = Dr["project_cd"].ToString();

            ProjectInfo.ProjectCD = Dr["project_cd"].ToString();
            ProjectInfo.ProjectNM = Dr["project_nm"].ToString();

            this.DialogResult = DialogResult.OK;

            this.Close();
        }
    }
}
